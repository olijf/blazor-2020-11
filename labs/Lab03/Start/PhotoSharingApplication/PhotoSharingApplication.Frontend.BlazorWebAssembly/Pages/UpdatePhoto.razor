@page "/photos/update/{id:int}"

@using PhotoSharingApplication.Frontend.Core.Interfaces
@using PhotoSharingApplication.Frontend.Core.Entities
@inject IPhotosService photosService
@inject NavigationManager navigationManager

<h3>Update</h3>

@if (photo == null) {
    <p>...Loading...</p>
} else {
<EditForm Model="@photo" OnValidSubmit="HandleValidSubmit">
    <p>
        <label>
            Title:
            <InputText @bind-Value="photo.Title" />
        </label>
    </p>
    <p>
        <label>
            Description (optional):
            <InputTextArea @bind-Value="photo.Description" />
        </label>
    </p>
    <p>
        <label>
            File:
            <InputFile OnChange="HandleFileSelected" />
        </label>
    </p>
    <p><img src="@(photo.PhotoFile == null ? "" : $"data:{photo.ImageMimeType};base64,{Convert.ToBase64String(photo.PhotoFile)}")" /></p>
    <button type="submit">Submit</button>
</EditForm>
}

@code {
    [Parameter]
    public int Id { get; set; }

    Photo photo;

    protected override async Task OnInitializedAsync() {
        photo = await photosService.FindAsync(Id);
    }

    private async Task HandleValidSubmit() {
        await photosService.UpdateAsync(photo);
        navigationManager.NavigateTo("/photos/all");
    }

    private async Task HandleFileSelected(IFileListEntry[] files) {
        IFileListEntry file = files.FirstOrDefault();
        photo.ImageMimeType = file.Type;

        using (var streamReader = new System.IO.MemoryStream()) {
            await file.Data.CopyToAsync(streamReader);
            photo.PhotoFile = streamReader.ToArray();
        }
    }
}
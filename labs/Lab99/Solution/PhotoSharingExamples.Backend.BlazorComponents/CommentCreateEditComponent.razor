<EditForm Model="@CommentItem" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <Field>
        <FieldLabel>Subject</FieldLabel>
        <TextEdit @bind-Text="@CommentItem.Subject" />
    </Field>
    <Field>
        <FieldLabel>Body</FieldLabel>
        <InputTextArea @bind-Value="@CommentItem.Body" class="form-control" rows="3"></InputTextArea>
    </Field>
    <input type="submit" class="btn btn-primary" value="@SaveText" />
    @if (!CreateMode)
    {
    <Button Color="Color.Primary" @onclick="OnCancel">Cancel</Button>
    }
</EditForm>

@code {
    [Parameter]
    public bool CreateMode { get; set; }

    private string SaveText => CreateMode ? "Create" : "Update";

    [Parameter]
    public PhotoSharingExamples.Shared.Entities.Comment CommentItem { get; set; }

    
    [Parameter]
    public EventCallback<PhotoSharingExamples.Shared.Entities.Comment> OnSave { get; set; }

    [Parameter]
    public EventCallback OnCancel { get; set; }

    private async Task HandleValidSubmit()
    {
        await OnSave.InvokeAsync(CommentItem);
    }
}
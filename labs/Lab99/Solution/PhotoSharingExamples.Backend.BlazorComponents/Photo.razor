<Card>
    <CardImage Source="@ImageForSource" Alt="@PhotoItem.Title">
    </CardImage>
    <CardBody>
        <CardTitle Size="5">@PhotoItem.Title</CardTitle>
        <CardText>
            <p>@PhotoItem.Description</p>
        </CardText>
    </CardBody>
    <CardFooter>
        <em>Uploaded by @PhotoItem.UserName On @PhotoItem.CreatedDate.ToShortDateString()</em>
    </CardFooter>
    <CardActions>
        @if (Details)
        {
            <Button Color="Color.Primary" @onclick="@(async()=> await OnDetails.InvokeAsync(PhotoItem.Id))">Details</Button>
        }
        @if (Edit)
        {
            <Button Color="Color.Primary" @onclick="@(async()=> await OnEdit.InvokeAsync(PhotoItem.Id))">Edit</Button>
        }
        @if (Delete)
        {
            <Button Color="Color.Primary" @onclick="@(async()=> await OnDelete.InvokeAsync(PhotoItem.Id))">Delete</Button>
        }
        @if (DeleteConfirm)
        {
            <Button Color="Color.Danger" @onclick="@(async()=> await OnDeleteConfirmed.InvokeAsync(PhotoItem.Id))">Delete</Button>
        }
    </CardActions>
</Card>

@code {
    [Parameter]
    public PhotoSharingExamples.Shared.Entities.Photo PhotoItem { get; set; }

    [Parameter]
    public bool Details { get; set; }

    [Parameter]
    public bool Edit { get; set; }
    [Parameter]
    public bool Delete { get; set; }
    [Parameter]
    public bool DeleteConfirm { get; set; }

    public string ImageForSource => $"data:{PhotoItem.ImageMimeType};base64,{Convert.ToBase64String(PhotoItem.PhotoFile)}";

    [Parameter]
    public EventCallback<int> OnEdit { get; set; }

    [Parameter]
    public EventCallback<int> OnDetails { get; set; }

    [Parameter]
    public EventCallback<int> OnDelete { get; set; }

    [Parameter]
    public EventCallback<int> OnDeleteConfirmed { get; set; }
}
@page "/photos/upload"

@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject PhotoSharingExamples.Frontend.Core.Interfaces.IPhotosService PhotosService

@inject IAccessTokenProvider AuthenticationService
@inject AuthenticationStateProvider AuthenticationStateProvider

@inject NavigationManager NavigationManager

@attribute [Authorize]

<div class="container">
    <div class="row">
        <div class="col-sm-12">
            <PhotoEdit photo="photo" CreateMode OnSave="OnSave" OnCancel="OnCancel"></PhotoEdit>
            <p class="text-danger">@message</p>
        </div>
    </div>
</div>

@code {
    PhotoSharingExamples.Shared.Entities.Photo photo = new PhotoSharingExamples.Shared.Entities.Photo();
    string message;
    private async Task OnSave(PhotoSharingExamples.Shared.Entities.Photo photo)
    {
        var tokenResult = await AuthenticationService.RequestAccessToken(new AccessTokenRequestOptions() { Scopes = new string[] { "photos" } });

        if (tokenResult.TryGetToken(out var token))
        {

            try
            {
                await PhotosService.CreateAsync(photo.Title, photo.PhotoFile, photo.ImageMimeType, photo.Description, photo.UserName, token.Value);
                NavigationManager.NavigateTo("photos/all");
            }
            catch (Exception ex)
            {
                message = ex.Message;
            }
        }
        else
        {
            NavigationManager.NavigateTo(tokenResult.RedirectUrl);
        }
    }
    private void OnCancel()
    {
        NavigationManager.NavigateTo("photos/all");
    }
}
